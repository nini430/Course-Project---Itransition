// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  firstName   String
  lastName    String
  email       String       @unique
  password    String
  role        Role         @default(BASIC)
  collections Collection[]
}

model Collection {
  id                   String                 @id @default(uuid())
  name                 String
  topic                CollectionTopic
  description          String
  image                String?
  authorId             String
  author               User                   @relation(fields: [authorId], references: [id])
  items                Item[]
  integerItems         IntegerField[]
  stringItems          StringField[]
  multilineItems       MultilineTextField[]
  booleancheckboxItems BooleanCheckboxField[]
  dateItems            DateField[]
}

model Item {
  id                        String     @id @default(uuid())
  name                      String
  tags                      String
  collectionId              String
  collection                Collection @relation(fields: [collectionId], references: [id])
  integerFieldOne           Json
  integerFieldTwo           Json
  integerFieldThree         Json
  stringFieldOne            Json
  stringFieldTwo            Json
  stringFieldThree          Json
  dateFieldOne              Json
  dateFieldTwo              Json
  dateFieldThree            Json
  multilineFieldOne         Json
  multilineFieldTwo         Json
  multilineFieldThree       Json
  booleanCheckboxFieldOne   Json
  booleanCheckboxFieldTwo   Json
  booleanCheckboxFieldThree Json
}

model IntegerField {
  id           String     @id @default(uuid())
  name         String
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id])
}

model StringField {
  id           String     @id @default(uuid())
  name         String
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id])
}

model MultilineTextField {
  id           String     @id @default(uuid())
  name         String
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id])
}

model BooleanCheckboxField {
  id           String     @id @default(uuid())
  name         String
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id])
}

model DateField {
  id           String     @id @default(uuid())
  name         String
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id])
}

enum CollectionTopic {
  books
  chocolates
  whiskeys
  watches
}

enum Role {
  BASIC
  ADMIN
}
